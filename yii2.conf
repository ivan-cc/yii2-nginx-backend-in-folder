server {
	server_name site;
	listen 80;
	access_log /var/logs/nginx/site_access.log;
	error_log /var/logs/nginx/site_error.log;
	
	charset utf-8;
	server_tokens off;
	index index.php;
  
  #тип подключения к php-fpm (socket, server)
  set $fastcgi_pass_php unix:/run/php/php7.1-fpm-uo.sock;
  
  #здесь устанавливаем путь к нашему Yii2-приложению
  set $base_root /home/user/app;
  
  set $frontend $base_root/frontend/web;
  set $backend $base_root/backend/web;

  root $frontend;

	#MAGIC for backend in folder
    location /superAdmin {
        alias $backend;

		    # Рекомендую всегда закрывать админку средствами самого веб-сервера
		    # это вас может спасти, при ошибках в настройки авторизации.
		    #
		    # Для создания авторизационных данных выполните следующие 
        # команды (MyLogin - ваш логин; MySuper-Password - ваш пароль):
        #
		    # sudo echo -n 'MyLogin:' >> /etc/nginx/.passwd
		    # sudo openssl passwd -apr1 My-Super-Password >> /etc/nginx/.passwd
        #
        # Так можно создать несколько записей авторизации, просто выполнив несколько 
        # раз комманды с разным логином
		
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.passwd;
		
		
        #объяснение есть ниже
        location ~ ^/superAdmin/.+\.(css|js|ico|png|jpe?g|gif|svg|ttf|woff|eot|woff2|mp4|mov|swf|pdf|zip|rar)$ {
            log_not_found off;
            access_log off;
            try_files $uri =404;
            expires 7d;
        }
        
        #объяснение есть ниже
        location ~ ^/superAdmin/assets/.+\.php(/|$) {
            deny all;
        }

        #имя запрошенного php-файла помещаем в переменную path
		    location ~ ^/superAdmin/(?<path>.*\.php)$ {
            #проверяем, что такой файл есть (проверка идёт от ранее указанного пути в alias)
	try_files /$path =404;
			    
	  		    fastcgi_pass $fastcgi_pass_php;
            
		  	    fastcgi_split_path_info ^(.+\.php)(/.+)$;
			      fastcgi_index index.php;
			      include fastcgi_params;
			      fastcgi_param SCRIPT_NAME $path;
			      fastcgi_param SCRIPT_FILENAME  $realpath_root/$path;#$fastcgi_script_name;
			      fastcgi_param DOCUMENT_ROOT $realpath_root;
		    }
	}
	#eof MAGIC
	
	
    location / {
    	try_files $uri $uri/ /index.php$is_args$args;
    }	

    location ~ \.php$ {
		  try_files $uri =404;
		  fastcgi_pass $fastcgi_pass_php;
		  fastcgi_index index.php;
		  include fastcgi_params;
		  fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    }
	  
    #статические файлы отдаем сразу с указанием, что браузер должен их закэшировать на 7 дней
    #логи отключаем для статики
    location ~ ^.+\.(txt|css|js|ico|png|jpe?g|gif|svg|ttf|woff|eot|woff2)$ {
        log_not_found off;
        access_log off;
        try_files $uri =404;
		    expires 7d;
    }

    # запрещаем запуск скриптов в assets
    # при этом выводим 404 ошибку, а не 403.
    # мол, таких файлов и не было никогда
    location ~ ^/assets/.+\.php(/|$) {
		  return 404;
      #deny all;
    }	
    
    # всё, что начинается со звёздочки, тоже запрещаем
    # все эти .git, .env, .gitignore и пр.
    location ~ /\. {
      return 404;
      #deny  all;
    }
    
}
